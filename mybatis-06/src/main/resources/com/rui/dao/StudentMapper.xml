<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rui.dao.StudentMapper">

<!--
    &lt;!&ndash;
    按照查询嵌套处理
    思路：
        1、查询所有的学生信息
        2、根据查询出来的学生的id的tid，寻找对应的老师！ -子查询

    &ndash;&gt;

    <select id="getStudent" resultMap="StudentTeacher">
    select * from student
    </select>

    <resultMap id="StudentTeacher" type="com.rui.pojo.Student">
        &lt;!&ndash;复杂的属性，我们需要单独处理  对象：association  集合：collection&ndash;&gt;
        <association property="teacher" column="tid" javaType="com.rui.pojo.Teacher" select="getTeacher"/>
    </resultMap>

    <select id="getTeacher" resultType="com.rui.pojo.Teacher">
        select * from teacher where id = #{id}
    </select>
-->

    <!--按照结果嵌套处理-->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from student s,teacher t
        where s.tid=t.id;
    </select>

    <resultMap id="StudentTeacher2" type="com.rui.pojo.Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="com.rui.pojo.Teacher">
            <result property="id" column="tid"></result>
            <result property="name" column="tname"></result>
        </association>

    </resultMap>

</mapper>